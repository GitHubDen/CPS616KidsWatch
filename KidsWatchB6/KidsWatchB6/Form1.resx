<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>